@model ELIMS_MVC.Models.Request

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Request</h4>
    <hr />
    <dl class="dl-horizontal">
        @*<dt>
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UserId)
        </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.StartDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.StartDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.RequestMade)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.RequestMade)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.LastName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.LastName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.NAUEmail)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.NAUEmail)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProjectName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProjectName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ProjectObjective)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProjectObjective)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ContactName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ContactName)
        </dd>
        @*<dt>
            @Html.DisplayNameFor(model => model.ContactID)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ContactID)
        </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.Funding)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Funding)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SponsorName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SponsorName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SponsorPhone)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SponsorPhone)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.SponsorEmail)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.SponsorEmail)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Chemicals)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Chemicals)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.MeetingTimes)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.MeetingTimes)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.GroupMembers)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.GroupMembers)
        </dd>
        @*<dt>
            @Html.DisplayNameFor(model => model.ProjectFile)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ProjectFile)
        </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.Status)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Status)
        </dd>
    </dl>
</div>

@if (Model.Status != RequestStatus.Approved)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, ELIMSOperations.Approve)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@RequestStatus.Approved" />
            <button type="submit" class="btn btn-lg btn-success">Approve</button>
        </form>
    }
}

@if (Model.Status != RequestStatus.Denied)
{
    @if ((await AuthorizationService.AuthorizeAsync(User, Model, ELIMSOperations.Deny)).Succeeded)
    {
        <form style="display:inline;" method="post">
            <input type="hidden" name="id" value="@Model.Id" />
            <input type="hidden" name="status" value="@RequestStatus.Denied" />
            <button type="submit" class="btn btn-lg btn-danger">Deny</button>
        </form>
    }
}
<br />
<br />
    <a asp-action="Index">Back to List</a>
