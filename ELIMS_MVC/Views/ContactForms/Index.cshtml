@model ELIMS_MVC.Models.ContactTopicViewModel

@{
    ViewData["Title"] = "Contact Form Submissions";
}

<h2>Contact Form Submissions</h2>

<hr />

<p>
    <a asp-action="Create" class="btn btn-primary" role="button" style="position:absolute;right:5%;">Create New</a></p>

<form asp-controller="ContactForms" asp-action="Index" method="get">
    <p>
        Search in message: <input type="text" name="search" style="padding: 0px 5px;"/> </p>

    <p>
        Filter by Topic: 
        <select asp-for="EntryTopic" asp-items="Model.Topics">
            <option value=" ">All</option>
        </select>
        <input type="submit" value="Filter" />
    </p>

</form>

<br />

<table class="table table-striped table-hover">
    <thead class="thead" style="background-color:#3c3c3c; color:lightgray;">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].ContactDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].LastName)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.ContactForms[0].UserId)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].NAUEmail)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].Topic)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ContactForms[0].Message)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.ContactForms)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                @*<td>
                    @Html.DisplayFor(modelItem => item.UserId)
                </td>*@
                <td>
                    @Html.DisplayFor(modelItem => item.NAUEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Topic)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Message)
                </td>
                <td>
                    @*@if (User.IsInRole(Constants.ELIMSAdministratorsRole))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                            <text> | </text>
                        }*@

                    @if (User.IsInRole(Constants.ELIMSAdministratorsRole) || User.IsInRole(Constants.ELIMSManagersRole) || User.IsInRole(Constants.ELIMSUsersRole))
                    {
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>

                    }

                    @if (User.IsInRole(Constants.ELIMSAdministratorsRole) || User.IsInRole(Constants.ELIMSManagersRole))

                    {
                        <text> | </text>
                        <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
